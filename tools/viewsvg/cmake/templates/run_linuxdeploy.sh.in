#!/bin/bash
# Set up environment variables - explicitly use Qt6
export QT_INSTALL_DIR="@QT_INSTALL_DIR@"
export PATH="@QT_INSTALL_DIR@/bin:$PATH"
export LD_LIBRARY_PATH="@QT_INSTALL_DIR@/lib:$LD_LIBRARY_PATH"
export QML_SOURCES_PATHS="@QML_SOURCES_PATHS@"
export OUTPUT="@PROJECT_NAME@-x86_64.AppImage"
# Disable stripping to avoid errors with newer library formats
export NO_STRIP=1

echo "Using Qt6 from: @QT_INSTALL_DIR@"

# First copy the Qt plugin to the expected location
mkdir -p @CMAKE_BINARY_DIR@/plugins
cp @LINUXDEPLOY_QT_DOWNLOAD@ @CMAKE_BINARY_DIR@/plugins/linuxdeploy-plugin-qt
chmod +x @CMAKE_BINARY_DIR@/plugins/linuxdeploy-plugin-qt

# Since we've already copied the full install to AppDir, we need to tell linuxdeploy
# where to find the libraries. The install directory structure already includes everything.
# We need to ensure linuxdeploy can find libresvg.so by adding the lib directory to LD_LIBRARY_PATH
export LD_LIBRARY_PATH="@APPDIR@/usr/lib:$LD_LIBRARY_PATH"

# Set up additional paths for linuxdeploy to find libraries
export LIBRARY_PATH="@APPDIR@/usr/lib"

# Run linuxdeploy with verbose output to see what it's doing
@LINUXDEPLOY_DOWNLOAD@ \
    --appdir=@APPDIR@ \
    --plugin=qt \
    --output=appimage \
    --verbosity=1 \
    -l@APPDIR@/usr/lib/libresvg.so \
    -l@APPDIR@/usr/lib/libviewsvg_qml.so

# Check if AppImage was created
if [ -f "@PROJECT_NAME@-x86_64.AppImage" ]; then
    echo "AppImage created successfully: @PROJECT_NAME@-x86_64.AppImage"
    chmod +x @PROJECT_NAME@-x86_64.AppImage
else
    echo "WARNING: AppImage creation failed. See linuxdeploy-errors.log for details"
    echo "Last 20 lines of error log:"
    tail -n 20 linuxdeploy-errors.log
fi

# Always exit with success so the install continues
exit 0
